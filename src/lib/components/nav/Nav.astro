---
import Accent from "$components/Accent.svelte";
import Cat from "$components/nav/Cat.svelte";
import Theme from "$components/nav/Theme.svelte";
import type { Links } from "$lib/data";
import Link from "$components/Link.astro";

interface Props {
  slug?: string[];
  title?: string;
}

const LINKS: Links = {
  about: { href: "/about" },
  projects: { href: "/projects" },
  writing: { href: "/writing" },
  friends: { href: "/friends" },
};

let { slug = [], title } = Astro.props;
if (title) {
  slug.pop();
  slug.push(title);
}

const origin = Astro.url?.origin ?? "";
function buildSegmentHref(index: number): string {
  if (!slug || slug.length === 0) return origin + "/";
  const path = "/" + slug.slice(0, index + 1).join("/");
  return origin + path;
}
---

<div class="flex w-full items-center justify-between md:text-xl">
  <div class="flex items-center gap-6">
    <Cat class="hidden sm:block" client:visible />

    <div class="flex flex-col">
      <div class="mb-2 flex items-center justify-between sm:hidden">
        <Cat client:visible />
        <Theme client:visible />
      </div>

      <div class="flex truncate font-mono text-lg">
        <a href="/">
          <Accent class="font-semibold" client:load>newt</Accent>
        </a>
        {
          slug
            ?.map((segment) => segment.replace("-", " "))
            .map((segment, i) => (
              <>
                <span class="text-muted-foreground mx-1">/</span>
                {i === slug.length - 1 ? (
                  <span class="text-muted-foreground">{segment}</span>
                ) : (
                  <Link colour="text" href={buildSegmentHref(i)}>
                    {segment}
                  </Link>
                )}
              </>
            ))
        }
      </div>
      <ul class="flex gap-2 md:gap-6">
        {
          Object.entries(LINKS).map(([name, { href }]) => (
            <li>
              <Link class="text-text font-normal" {href} data-astro-prefetch>
                {name}
              </Link>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
  <Theme class="hidden sm:flex" client:visible />
</div>

---
import Accent from "$components/Accent.svelte";
import Cat from "$components/nav/Cat.svelte";
import Theme from "$components/nav/Theme.svelte";
import type { Links } from "$lib/data";
import Link from "../Link.astro";

interface Props {
  slug?: string[];
  title?: string;
}

const LINKS: Links = {
  about: { href: "/about" },
  projects: { href: "/projects" },
  writing: { href: "/writing" },
  friends: { href: "/friends" },
};

let { slug = [], title } = Astro.props;
if (title) {
  slug.pop();
  slug.push(title);
}

const origin = Astro.url?.origin ?? "";
function buildSegmentHref(index: number): string {
  if (!slug || slug.length === 0) return origin + "/";
  const path = "/" + slug.slice(0, index + 1).join("/");
  return origin + path;
}
---

<div class="flex items-center gap-4 font-mono text-xl">
  <Cat client:load />

  <div class="flex">
    <a href="/">
      <Accent class="font-semibold" client:load>newt</Accent>
    </a>
    {
      slug?.map((segment, i) => (
        <>
          <span class="text-muted-foreground mx-1">/</span>
          {i === slug.length - 1 ? (
            <span class="text-muted-foreground">{segment}</span>
          ) : (
            <a href={buildSegmentHref(i)}>{segment}</a>
          )}
        </>
      ))
    }
    <!-- {
      slug?.map((segment, i) => (
        <div class={i !== 0 ? "hidden sm:inline" : ""}>
          <span class="mx-1">/</span>

        </div>
      ))
    } -->
  </div>
</div>

<div class="flex items-center gap-8">
  <ul class="flex gap-2 md:gap-6 md:text-lg">
    {
      Object.entries(LINKS).map(([name, { href }]) => (
        <li>
          <Link class="text-text font-normal" {href} data-astro-prefetch>
            {name}
          </Link>
        </li>
      ))
    }
  </ul>
  <Theme client:load />
</div>
